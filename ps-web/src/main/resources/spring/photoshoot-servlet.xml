<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>
    <!-- 启用默认Servlet -->
    <mvc:default-servlet-handler/>
    <!--此处修改2017年11月2日-->
    <!--scan the package-->
    <!--<context:component-scan base-package="com.instrantes.*"/>-->
    <!--扫描web相关的controller,security-->
    <context:component-scan base-package="com.instrantes.controller"/>
    <context:component-scan base-package="com.instrantes.security"/>
    <context:component-scan base-package="com.instrantes.service"/>
    <!-- 激活组件扫描功能,扫描aop的相关组件组件 -->
    <!--<context:component-scan base-package="com.instrantes.aop"/>-->
    <!-- 启动对@AspectJ注解的支持 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <!-- 静态资源 -->
    <!--<mvc:resources location="/assets/" mapping="/assets/**"/>-->

    <!--避免IE执行AJAX时，返回JSON出现下载文件-->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!--&lt;!&ndash; 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 &ndash;&gt;-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
    <!--<property name="order" value="1"></property>-->
    <!--<property name="mediaTypes">-->
    <!--<map>-->
    <!--&lt;!&ndash; 告诉视图解析器，返回的类型为json格式 &ndash;&gt;-->
    <!--<entry key="json" value="application/json"/>-->
    <!--<entry key="xml" value="application/xml"/>-->
    <!--<entry key="htm" value="text/htm"/>-->
    <!--</map>-->
    <!--</property>-->
    <!--<property name="defaultViews">-->
    <!--<list>-->
    <!--&lt;!&ndash; ModelAndView里的数据变成JSON &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="ignoreAcceptHeader" value="true"></property>-->
    <!--</bean>-->

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="10"></property>
        <property name="prefix" value="/templates/"></property>
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html"></property>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/templates/"/>
        <property name="suffix" value=".html"/>
    </bean>
</beans>